{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","timeObj","currentDate","Math","floor","targetDate","date","Date","secs","getSeconds","mins","getMinutes","hours","getHours","days","getDays","numbers","getNumbers","secsPlace","minsPlace","hoursPlace","n1","initialNumOfDays","toString","length","n2","daysPlace","repeat","values","getValues","document","querySelector","selector","textContent","clearInterval","timerId","setInterval","reflectTime","countdownTimer1","reflectInitialDate","startTimer"],"mappings":";AAAA,aAuGA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EArGA,MAAMA,EAEFC,YAAYC,GAOCC,EAAAA,KAAAA,aAAAA,GACFC,KAAKC,OAAQ,KAAKC,WAAaH,GAAgB,IAAc,MAG3DA,EAAAA,KAAAA,aAAAA,GACFC,KAAKC,OACN,KAAKC,WAAaH,GAAgB,KAAoB,MAIrDA,EAAAA,KAAAA,WAAAA,GACAC,KAAKC,OACN,KAAKC,WAAaH,GAAgB,MAAyB,OAI3DA,EAAAA,KAAAA,UAAAA,GACCC,KAAKC,OAAO,KAAKC,WAAaH,GAAgB,QAG5C,EAAA,KAAA,aAAA,KACLI,IAAAA,EAAO,IAAIC,KAKR,MAAA,CAACC,KAJG,KAAKC,WAAWH,GAIbI,KAHH,KAAKC,WAAWL,GAGPM,MAFR,KAAKC,SAASP,GAECQ,KADhB,KAAKC,QAAQT,MAIhB,EAAA,KAAA,YAAA,KAEJU,IAAAA,EAAU,KAAKC,aACfC,EAAYF,EAAQR,KAAO,OAASQ,EAAQR,UAAYQ,EAAQR,OAChEW,EAAYH,EAAQN,KAAO,OAASM,EAAQN,UAAYM,EAAQN,OAChEU,EAAaJ,EAAQJ,MAAQ,OAASI,EAAQJ,WAAaI,EAAQJ,QACnES,EAAK,KAAKC,iBAAiBC,WAAWC,OACtCC,EAAKT,EAAQF,KAAKS,WAAWC,OAG1B,MAAA,CAACN,UAAAA,EAAWC,UAAAA,EAAWC,WAAAA,EAAYM,aAFvB,IAAIC,OAAON,EAAGI,KAAMT,EAAQF,UAK9B,EAAA,KAAA,qBAAA,KACbc,IAAAA,EAAS,KAAKC,YAClBC,SAASC,iBAAiB,KAAKC,oCAAoCC,YAAcL,EAAOV,UACxFY,SAASC,iBAAiB,KAAKC,oCAAoCC,YAAcL,EAAOT,UACxFW,SAASC,iBAAiB,KAAKC,qCAAqCC,YAAcL,EAAOR,WACzFU,SAASC,iBAAiB,KAAKC,oCAAoCC,YAAcL,EAAOF,YAG9E,EAAA,KAAA,cAAA,KACNV,IAAAA,EAAU,KAAKC,aACfW,EAAS,KAAKC,YAElBC,SAASC,iBAAiB,KAAKC,oCAAoCC,YAAcL,EAAOV,UAEnE,KAAjBF,EAAQR,OACRsB,SAASC,iBAAiB,KAAKC,oCAAoCC,YAAcL,EAAOT,WAGvE,KAAjBH,EAAQN,OACRoB,SAASC,iBAAiB,KAAKC,qCAAqCC,YAAcL,EAAOR,YAGvE,KAAlBJ,EAAQJ,QACRkB,SAASC,iBAAiB,KAAKC,oCAAoCC,YAAcL,EAAOF,WAGzE,IAAfV,EAAQR,MAA2B,IAAfQ,EAAQN,MAA4B,IAAhBM,EAAQJ,OAA4B,IAAfI,EAAQF,MACrEoB,cAAc,KAAKC,WAId,EAAA,KAAA,aAAA,KACJA,KAAAA,QAAUC,YAAY,KAAKC,YAAa,OAhFxCL,KAAAA,SAAW/B,EAAQ+B,SACnB3B,KAAAA,WAAaJ,EAAQI,WACrBiB,KAAAA,iBAAmBnB,KAAKC,OAAO,KAAKC,WAAa,IAAIE,MAAW,OAChE4B,KAAAA,SA0Fb,MAAMG,EAAkB,IAAIvC,EAAe,CACvCiC,SAAU,WACV3B,WAAY,IAAIE,KAAM,0BAE1B+B,EAAgBC,qBAChBD,EAAgBE","file":"src.ba96d409.js","sourceRoot":"../src","sourcesContent":["\"use strict\";\n\nclass CountdownTimer {\n\n    constructor(timeObj) {\n        this.selector = timeObj.selector;\n        this.targetDate = timeObj.targetDate;\n        this.initialNumOfDays = Math.floor((this.targetDate - new Date()) / (1000 * 60 * 60 * 24));\n        this.timerId;\n    }\n\n    getSeconds = currentDate => {\n        return Math.floor(((this.targetDate - currentDate) % (1000 * 60)) / 1000);\n    };\n    \n    getMinutes = currentDate => {\n        return Math.floor(\n            ((this.targetDate - currentDate) % (1000 * 60 * 60)) / (1000 * 60)\n        );\n    };\n    \n    getHours = currentDate => {\n        return Math.floor(\n            ((this.targetDate - currentDate) % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n        );\n    };\n    \n    getDays = currentDate => {\n        return Math.floor((this.targetDate - currentDate) / (1000 * 60 * 60 * 24));\n    };\n\n    getNumbers = () => {\n        let date = new Date();\n        let secs = this.getSeconds(date);\n        let mins = this.getMinutes(date);\n        let hours = this.getHours(date);\n        let days = this.getDays(date);\n        return {secs, mins, hours, days}\n    }\n\n    getValues = () => {\n        \n        let numbers = this.getNumbers();\n        let secsPlace = numbers.secs < 10 ? `0${numbers.secs}` : `${numbers.secs}`;\n        let minsPlace = numbers.mins < 10 ? `0${numbers.mins}` : `${numbers.mins}`;\n        let hoursPlace = numbers.hours < 10 ? `0${numbers.hours}` : `${numbers.hours}`;\n        let n1 = this.initialNumOfDays.toString().length;\n        let n2 = numbers.days.toString().length;\n        let daysPlace = `${'0'.repeat(n1-n2)}${numbers.days}`;\n\n        return {secsPlace, minsPlace, hoursPlace, daysPlace}\n    }\n\n    reflectInitialDate = () => {\n        let values = this.getValues();\n        document.querySelector(`${this.selector} span[data-value=\"secs\"]`).textContent = values.secsPlace;\n        document.querySelector(`${this.selector} span[data-value=\"mins\"]`).textContent = values.minsPlace;\n        document.querySelector(`${this.selector} span[data-value=\"hours\"]`).textContent = values.hoursPlace;\n        document.querySelector(`${this.selector} span[data-value=\"days\"]`).textContent = values.daysPlace;\n    }\n\n    reflectTime = () => {\n        let numbers = this.getNumbers();\n        let values = this.getValues();\n        \n        document.querySelector(`${this.selector} span[data-value=\"secs\"]`).textContent = values.secsPlace;\n    \n        if (numbers.secs === 59) {\n            document.querySelector(`${this.selector} span[data-value=\"mins\"]`).textContent = values.minsPlace;\n        }\n    \n        if (numbers.mins === 59) {\n            document.querySelector(`${this.selector} span[data-value=\"hours\"]`).textContent = values.hoursPlace;\n        }\n    \n        if (numbers.hours === 11) {\n            document.querySelector(`${this.selector} span[data-value=\"days\"]`).textContent = values.daysPlace;\n        }\n    \n        if (numbers.secs===0 && numbers.mins===0 && numbers.hours===0 && numbers.days===0) {\n            clearInterval(this.timerId);\n        }\n    };\n\n    startTimer = () => {\n        this.timerId = setInterval(this.reflectTime, 1000);\n    }\n}\n\n//Timer 1 example\n// const countdownTimer = new CountdownTimer({\n//     selector: \"#timer-1\",\n//     targetDate: new Date(new Date().getTime() + 20000000)\n// });\n\n\n\n//Timer 2 example\nconst countdownTimer1 = new CountdownTimer({\n    selector: \"#timer-1\",\n    targetDate: new Date ('31 dec 2021 23:59:59')\n});\ncountdownTimer1.reflectInitialDate();\ncountdownTimer1.startTimer();"]}